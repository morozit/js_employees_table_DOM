{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","table","form","createElement","thead","tbody","tableRows","querySelectorAll","sortState","column","order","selectedElement","employees","getEmployeeDataFromRow","length","forEach","row","cells","employee","nam","textContent","position","office","age","parseInt","salary","formatSalary","push","pushNotification","title","description","type","notification","classList","add","innerHTML","appendChild","setTimeout","remove","isValidName","isValidAge","isValidSalary","isNaN","addEmployeeToTable","newRow","formatCurrency","updateTable","string","replace","numberString","number","Number","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","addEventListener","even","selectedElementDblClick","target","tagName","currentValue","input","value","focus","newValue","targetHeader","headerIndex","Array","from","children","indexOf","sortRows","sort","a","b","aTextContent","bTextContent","localeCompare","contains","closest","setAttribute","after","insertAdjacentHTML","e","preventDefault","nameInput","positionInput","officeSelect","ageInput","salaryInput","trim","isValid","errorMessage","reset"],"mappings":"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","file":"main.8685d10e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst table = document.querySelector('table');\nconst form = document.createElement('form');\nconst thead = table.querySelector('thead tr');\nconst tbody = table.querySelector('tbody');\nconst tableRows = document.querySelectorAll('table tbody tr');\n\nconst sortState = {\n  column: null,\n  order: 'asc',\n};\nlet selectedElement = null;\n\nlet employees = [];\n\ntbody.addEventListener('dblclick', (even) => {\n  const selectedElementDblClick = even.target;\n\n  if (selectedElementDblClick.tagName === 'TD') {\n    const currentValue = selectedElementDblClick.textContent;\n\n    const input = document.createElement('input');\n\n    input.type = 'text';\n    input.value = currentValue;\n\n    selectedElementDblClick.textContent = '';\n    selectedElementDblClick.appendChild(input);\n\n    input.focus();\n\n    input.addEventListener('blur', () => {\n      const newValue = input.value;\n\n      selectedElementDblClick.textContent = newValue;\n\n      getEmployeeDataFromRow();\n      updateTable();\n    });\n  }\n});\n\nthead.addEventListener('click', even => {\n  const targetHeader = even.target;\n\n  const headerIndex = Array.from(thead.children).indexOf(targetHeader);\n\n  if (sortState.column !== headerIndex) {\n    sortState.order = 'asc';\n  } else {\n    sortState.order = sortState.order === 'asc' ? 'desc' : 'asc';\n  }\n\n  sortState.column = headerIndex;\n\n  const sortRows = Array.from(document.querySelectorAll('table tbody tr'));\n\n  sortRows.sort((a, b) => {\n    const aTextContent = a.children[headerIndex].textContent;\n    const bTextContent = b.children[headerIndex].textContent;\n\n    if (targetHeader.innerHTML === 'Salary') {\n      return (+formatSalary(aTextContent) - +formatSalary(bTextContent))\n        * (sortState.order === 'asc' ? 1 : -1);\n    }\n\n    return (aTextContent.localeCompare(bTextContent))\n      * (sortState.order === 'asc' ? 1 : -1);\n  });\n\n  tbody.innerHTML = '';\n\n  sortRows.forEach(row => {\n    tbody.appendChild(row);\n  });\n});\n\ntbody.addEventListener('click', (even) => {\n  const target = even.target;\n\n  if (selectedElement && selectedElement.classList.contains('active')) {\n    selectedElement.classList.remove('active');\n  }\n\n  selectedElement = target.closest('tr');\n  selectedElement.classList.add('active');\n});\n\n(function createForm() {\n  form.classList.add('new-employee-form');\n  form.setAttribute('action', '#');\n  form.setAttribute('method', 'post');\n\n  table.after(form);\n\n  form.insertAdjacentHTML('beforeend',\n    `<label>Name:\n      <input\n        name=\"name\"\n        type=\"text\"\n        required\n        data-qa=\"name\">\n    </label>\n    <label>Position:\n      <input\n        name=\"position\"\n        type=\"text\"\n        required\n        data-qa=\"position\"\n      >\n    </label>\n    <label>Office:\n      <select\n        name=\"office\"\n        required\n        data-qa=\"office\"\n      >\n        <option value=\"\" disabled selected></option>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age:\n      <input\n        name=\"age\"\n        type=\"number\"\n        required\n        data-qa=\"age\"\n      >\n    </label>\n    <label>Salary:\n      <input\n        name=\"salary\"\n        type=\"number\"\n        required\n        data-qa=\"salary\"\n      >\n    </label>\n  <button type=\"submit\">Save to table</button>`);\n})();\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const nameInput = form.querySelector('input[name=\"name\"]');\n  const positionInput = form.querySelector('input[name=\"position\"]');\n  const officeSelect = form.querySelector('select[name=\"office\"]');\n  const ageInput = form.querySelector('input[name=\"age\"]');\n  const salaryInput = form.querySelector('input[name=\"salary\"]');\n\n  const nam = nameInput.value.trim();\n  const position = positionInput.value.trim();\n  const office = officeSelect.value.trim();\n  const age = parseInt(ageInput.value.trim());\n  const salary = salaryInput.value.trim();\n\n  let isValid = true;\n  let errorMessage = '';\n\n  if (!isValidName(nam)) {\n    isValid = false;\n    errorMessage += '- Name should have at least 4 letters.\\n';\n  }\n\n  if (!isValidAge(age)) {\n    isValid = false;\n    errorMessage += '- Age should be between 18 and 90.\\n';\n  }\n\n  if (!isValidSalary(salary)) {\n    isValid = false;\n    errorMessage += '- Salary should be a valid number.\\n';\n  }\n\n  if (!isValid) {\n    pushNotification('Error', errorMessage, 'error');\n\n    return;\n  }\n\n  const employee = {\n    nam,\n    position,\n    office,\n    age,\n    salary,\n  };\n\n  employees.push(employee);\n  updateTable();\n\n  form.reset();\n\n  pushNotification('Success', 'New employee has been added.', 'success');\n});\n\nfunction getEmployeeDataFromRow() {\n  if (employees.length > 0) {\n    employees = [];\n  }\n\n  tableRows.forEach((row) => {\n    const cells = row.querySelectorAll('td');\n    const nam = cells[0].textContent;\n    const position = cells[1].textContent;\n    const office = cells[2].textContent;\n    const age = parseInt(cells[3].textContent);\n    const salary = formatSalary(cells[4].textContent);\n\n    const employee = {\n      nam,\n      position,\n      office,\n      age,\n      salary,\n    };\n\n    employees.push(employee);\n  });\n}\n\ngetEmployeeDataFromRow();\n\nfunction pushNotification(title, description, type) {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n\n  notification.innerHTML = `\n    <h2>${title}</h2>\n    <p>${description}</p>\n  `;\n\n  body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 4000);\n};\n\nfunction isValidName(nam) {\n  return nam.length >= 4;\n};\n\nfunction isValidAge(age) {\n  return age >= 18 && age <= 90;\n};\n\nfunction isValidSalary(salary) {\n  return !isNaN(salary);\n};\n\nfunction addEmployeeToTable(employee) {\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n    <td>${employee.nam}</td>\n    <td>${employee.position}</td>\n    <td>${employee.office}</td>\n    <td>${employee.age}</td>\n    <td>${formatCurrency(employee.salary)}</td>\n  `;\n  tbody.appendChild(newRow);\n};\n\nfunction updateTable() {\n  tbody.innerHTML = '';\n\n  employees.forEach((employee) => {\n    addEmployeeToTable(employee);\n  });\n};\n\nfunction formatSalary(string) {\n  return string.replace(/[$,]/g, '');\n};\n\nfunction formatCurrency(numberString) {\n  const number = Number(numberString);\n\n  if (isNaN(number)) {\n    return 'Invalid number';\n  }\n\n  const formattedNumber = number.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n  });\n\n  return formattedNumber;\n};\n"]}